#Creating dataframe that contains means for n clusters in final model
labels = final_model.named_steps["kmeans"].labels_
xgb = X.groupby(labels).mean()
xgb


# Visualising dataframe using plotly express
# Creating side-by-side bar chart of `xgb`
fig = px.bar(
    data_frame= xgb,
    barmode = "group",
    title= "Small Business Owner Finances by Cluster"
)
fig.update_layout(xaxis_title="Cluster", yaxis_title="Value [$]")
fig.show()


#Using PCA to reduce dimensions of mean cluster dataframe
# Instantiate transformer
pca = PCA(n_components=2, random_state=42)
X_t = pca.fit_transform(X)
# Put `X_t` into DataFrame
X_pca = pd.DataFrame(X_t, columns=["PC1", "PC2"])
print("X_pca shape:", X_pca.shape)
X_pca.head()


#Using plotly express "px" to visualise final dataframe
# Create scatter plot of `PC2` vs `PC1`
fig = px.scatter(
    data_frame= X_pca,
    x= "PC1",
    y= "PC2",
    color= labels.astype(str),
    title= "PCA Representation of Clusters"
)
fig.update_layout(xaxis_title="PC1", yaxis_title="PC2")
fig.show()
